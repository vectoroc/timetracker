<?php

function timetracker_menu() {
  $menu['admin/settings/timetracker'] = array(
    'title' => 'Time Tracker',
    'file' => 'timetracker.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('timetracker_admin_settings'),
    'access arguments' => array('access administration pages'),
  );
  
//  $menu['timetracker/add/js'] = array(
//  );
  
  return $menu;
}

function timetracker_perm() {
  return array('view any timetracker', 'view own timetracker', 'edit timetracker', 'delete timetracker');
}

function timetracker_theme() {
  return array(
    'timetracker_table' => array(
      'arguments' => array( 
        'form' => NULL,
      ),
    ),
  );
}

function timetracker_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  $node_types = variable_get('timetracker_node_types', array());
  
  if (!isset($node_types[$node->type])) {
    return;
  }
  
  if ($op == 'view' && isset($node->nid) && !$teaser && $page) {
    // TODO: refactor this
    if (module_exists('spaces') && module_exists('timetracker_feature')) {
      if (!spaces_access_feature('view', 'timetracker_feature')) {
        return;
      }
    }
    
    if (user_access('view any timetracker') || user_access('view own timetracker')) {
      $node->content['timetracker'] = array(
        '#type' => 'item',
        '#title' => t('Time Tracking'),
        '#value' => drupal_get_form('timetracker_table', $node),
        '#weight' => 10,
      );
    }
  }
  elseif ($op == 'load') {
    $res = db_query('SELECT tt.*, u.name as user_name FROM {timetracker} tt LEFT JOIN {users} u USING(uid) WHERE nid = %d', $node->nid);
    $time_records = array();
    
    while($row = db_fetch_array($res)) {
      $time_records[$row['tid']] = $row; 
    }
    
    $node->timetracker = $time_records;
  }
  elseif ($op == 'delete') {
    db_query('DELETE FROM {timetracker} WHERE nid = %d', $node->nid);
  }
}

/**
 * Implementation of hook_views_api().
 */
function timetracker_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'timetracker'),
  );
}


function timetracker_table(&$form_state, $node) {
  global $user;
  
  $titles = array(
    'timestamp' => t('Date'),
    'uid' => t('User'),
    'value' => t('Hours'),
    'note' => t('Note'),
    'delete' => '',
  );
  
  $form['titles'] = array(
    '#type' => 'value',
    '#values' => $titles,
  );
  
  $form['new_item'] = array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#access' => user_access('edit timetracker'),
  );
  
  $form['new_item']['timestamp'] = array(
    '#type' => 'date',  
    '#title' => $titles['timestamp'],
  );
  
  if (module_exists('date_popup')) {
    $form['new_item']['timestamp']['#type'] = 'date_popup';
    $form['new_item']['timestamp']['#default_value'] = gmdate('Y-m-d H:i:s', time());
  }
  
  if (!user_access('view any timetracker')) {
    $users_list[$user->uid] = $user->name;
  }
  else {
    $users_list = _timetracker_users();
  }
  
  $form['new_item']['uid'] = array(
    '#type' => 'select',  
    '#title' => $titles['uid'],
    '#options' => $users_list,
    '#default_value' => $user->uid, 
  );
  
  $form['new_item']['value'] = array(
    '#type' => 'textfield',  
    '#title' => $titles['value'],
    '#size' => 5,
    '#maxlength' => 5,
  );
  
  $form['new_item']['note'] = array(
    '#type' => 'textfield',  
    '#title' => $titles['note'],
  );
  
  $form['new_item']['nid'] = array(
    '#type' => 'value',  
    '#value' => $node->nid,
  );
  
  $form['new_item']['add'] = array(
    '#type' => 'submit',  
    '#value' => t('Add'),
  );
  
  $form['items'] = array(
    '#type' => 'fieldset',
  );
  
  $total = 0;
  
  foreach((array)$node->timetracker as $tid => $item) {
    if (!user_access('view any timetracker') && $item['uid'] != $user->uid) {
      continue;
    }
    
    $total += $item['value'];
    
    foreach ($item as $key => $value) {
      if (isset($titles[$key])) {
        $form['items'][$tid][$key] = array(
          '#type' => 'item', 
          '#title' => $titles[$key], 
          '#value' => $value
        );
      }
    }
    
    $form['items'][$tid]['user_name'] = array(
      '#type' => 'item', 
      '#title' => t('User Name'), 
      '#value' => $item['user_name'],
    );
    
    $form['items'][$tid]['timestamp']['#value'] = gmdate('M j, Y', $item['timestamp']);
    $form['items'][$tid]["del"] = array(
      '#name' => "delete-$tid",
      '#type' => 'submit',
      '#access' => user_access('delete timetracker'),
      '#value' => t('Delete'),
    ); 
  }
    
  $form['total'] = array(
    '#type' => 'item',
    '#title' => t('Total'),
    '#value' => $total,
  );
   
  return $form;
}

function timetracker_table_validate($form, &$form_state) {
  if ($form_state['clicked_button']['#value'] == t('Add')) {
    if (!is_numeric($form_state['values']['new_item']['value'])) {
      form_error($form['new_item']['value'], t('Hours must be a numeric value'));
    }    
  }
}


function timetracker_table_submit($form, &$form_state) {
  global $user;
  
  if ($form_state['clicked_button']['#value'] == t('Delete')) {
    $tid = $form_state['clicked_button']['#array_parents'][1];
    if ($tt_entry = db_fetch_object(db_query('SELECT * FROM {timetracker} WHERE tid = %d', $tid))) { 
      db_query('DELETE FROM {timetracker} WHERE tid = %d', $tid);
      watchdog('timetracker', 'deleted timetracker entry (@value h. / @date / @note)', array(
        '@value' => $tt_entry->value,
        '@date'  => format_date($tt_entry->timestamp, 'small'),
        '@note'  => $tt_entry->note,
      ), WATCHDOG_NOTICE,l('case', 'node/'. $tt_entry->nid) .' / '. l('user', 'user/'. $tt_entry->uid));
    }
  }
  elseif ($form_state['clicked_button']['#value'] == t('Add')) {
  
    $record = $form_state['values']['new_item'];
    
    if (module_exists('date_popup')) {
      $record['timestamp'] = date_convert(
        $form_state['values']['new_item']['timestamp'], 
        DATE_DATETIME, 
        DATE_UNIX,
        $form['new_item']['timestamp']['#date_timezone']
      );    
    }
    else {
      $date = $form_state['values']['new_item']['timestamp'];
      $record['timestamp'] = gmmktime(0, 0, 0, $date['month'], $date['day'], $date['year']);
    }
    
    drupal_write_record('timetracker', $record);
    $tt_entry = (object) $record; 
    if ($tt_entry->tid) {
      watchdog('timetracker', 'added timetracker entry (@value h / @date / @note', array(
        '@value' => $tt_entry->value,
        '@date'  => format_date($tt_entry->timestamp, 'small'),
        '@note'  => $tt_entry->note,
      ), WATCHDOG_NOTICE,l('case', 'node/'. $tt_entry->nid) .' / '. l('user', 'user/'. $tt_entry->uid));
    }
  }
}

function theme_timetracker_table($form) {
  _timetracker_include_resources();
  
  $header = array();
  foreach (array('timestamp', 'uid', 'value', 'note') as $i => $field) {
    $header[] = array(
      'data' => $form['new_item'][$field]['#title'], 
      'class' => "field-$field",
    );
  }
  
  $header[] = array(
    'data' => '', 
    'class' => "field-operations",
  );
  
  
  $rows = array();
  foreach (element_children($form['items']) as $tid) {
    $row = array();    
    
    $account->uid  = $form['items'][$tid]['uid']['#value'];
    $account->name = $form['items'][$tid]['user_name']['#value'];
  
    $rows[] = array(
      $form['items'][$tid]['timestamp']['#value'],
      theme('username', $account),
      $form['items'][$tid]['value']['#value'],
      $form['items'][$tid]['note']['#value'],
      array(
        'data' => drupal_render($form['items'][$tid]["del"]), 
        'class' => 'field-operations'
      ),
    );
    
    drupal_render($form['items'][$tid]);
  }
  
  $rows[] = array(
    'data' => array(
      array(
        'data' => t('Total'),
        'colspan' => 2,
      ),
      array(
        'data' => $form['total']['#value'],
        'colspan' => 3,
      ),
    ),
    'class' => 'total',
  );
    
  if (user_access('edit timetracker')) {
    $rows[] = array(
      drupal_render($form['new_item']['timestamp']),
      drupal_render($form['new_item']['uid']),
      drupal_render($form['new_item']['value']),
      drupal_render($form['new_item']['note']),
      array('data' => drupal_render($form['new_item']['add']), 'class' => 'field-operations'),
    );
  }

  drupal_render($form['total']);
  drupal_render($form['new_item']);
  drupal_render($form['items']);
  
  return theme('table', $header, $rows, array('class' => 'timetracker')) . drupal_render($form);
}

function _timetracker_users() {
  $users = array();
  
  $result = db_query("SELECT name FROM {users} WHERE uid = 1 AND status <> 0");
  if ($result && ($admin_name = db_result($result))) {
    $users[1] = $admin_name;
  }
  
  $rids = array_keys(user_roles(FALSE, 'edit timetracker'));
  
  $result = NULL;
  if (in_array(DRUPAL_AUTHENTICATED_RID, $rids)) {
    $result = db_query("SELECT uid, name FROM {users} WHERE uid > 1 AND status <> 0");
  }
  elseif (count($rids)) {
    $placeholders = db_placeholders($rids);
    $query = <<<SQL
      SELECT u.uid, u.name 
        FROM {users} u 
      LEFT JOIN {users_roles} ur 
           USING (uid) 
      WHERE u.uid > 1
        AND u.status <> 0 
        AND ur.rid IN ($placeholders)
SQL;

    $result = db_query($query, $rids);  
  }
  
  if ($result) {
    while($row = db_fetch_object($result)) {
      $users[$row->uid] = $row->name;
    }    
  }
  
  return $users;
}

function _timetracker_include_resources() {
  drupal_add_css(drupal_get_path('module', 'timetracker') .'/timetracker.css');
}